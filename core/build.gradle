plugins {
    id 'idea'
    id 'java-library'
    id "io.github.krakowski.jextract" version "0.2.2"
}

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(18))
    }
}

group = 'de.hhu.bsinfo'
version = getProperty('projectVersion')

tasks.withType(Javadoc) {
    failOnError false
}

dependencies {

    // Logging
    api "org.slf4j:slf4j-api:${slf4jVersion}"

    // Annotations
    implementation "org.jetbrains:annotations:${jetbrainsAnnotationsVersion}"

    // Testing
    testImplementation "org.junit.jupiter:junit-jupiter:${junitJupiterVersion}"
    testImplementation "org.assertj:assertj-core:${assertjVersion}"
    testImplementation "org.slf4j:slf4j-nop:${slf4jVersion}"
}

test {
    useJUnitPlatform()
}

jextract {

    header("${project.projectDir}/src/main/resources/ucx.h") {

        libraries = [ 'ucp' ]

        targetPackage = 'org.openucx'

        className = 'OpenUcx'

        functions = [

                // Context
                'ucp_cleanup', 'ucp_init', 'ucp_init_version', 'ucp_context_print_info', 'ucp_context_query',
                'ucp_get_version', 'ucp_get_version_string',

                // Configuration
                'ucp_config_modify', 'ucp_config_print', 'ucp_config_read', 'ucp_config_release',

                // Communication Routines
                'ucp_tag_send_nbx', 'ucp_tag_send_sync_nbx', 'ucp_tag_recv_nbx', 'ucp_tag_msg_recv_nbx',
                'ucp_stream_recv_nbx', 'ucp_stream_send_nbx', 'ucp_get_nbx', 'ucp_atomic_op_nbx', 'ucp_put_nbx',
                'ucp_am_data_release', 'ucp_am_recv_data_nbx', 'ucp_am_send_nbx',

                // Endpoint
                'ucp_ep_close_nbx', 'ucp_ep_create', 'ucp_ep_destroy', 'ucp_ep_flush_nbx', 'ucp_ep_print_info', 'ucp_ep_rkey_unpack',

                // Listener
                'ucp_listener_create', 'ucp_listener_destroy', 'ucp_listener_query', 'ucp_listener_reject', 'ucp_conn_request_query',

                // Memory
                'ucp_mem_map', 'ucp_mem_print_info', 'ucp_mem_query', 'ucp_mem_unmap', 'ucp_mem_advise',

                // Datatype
                'ucp_dt_create_generic', 'ucp_dt_destroy',

                // Request
                'ucp_request_alloc', 'ucp_request_cancel', 'ucp_request_check_status', 'ucp_request_free',

                // Remote Key
                'ucp_rkey_buffer_release', 'ucp_rkey_destroy',
                'ucp_rkey_pack', 'ucp_rkey_ptr',

                // Worker
                'ucp_worker_arm', 'ucp_worker_create', 'ucp_worker_destroy',
                'ucp_worker_fence', 'ucp_worker_flush_nbx', 'ucp_worker_get_address', 'ucp_worker_get_efd',
                'ucp_worker_print_info', 'ucp_worker_progress', 'ucp_worker_query', 'ucp_worker_release_address',
                'ucp_worker_set_am_recv_handler', 'ucp_worker_signal', 'ucp_worker_wait', 'ucp_worker_wait_mem',
                'ucp_stream_worker_poll',

                // Logging
                'ucs_log_get_buffer_size', 'ucs_log_push_handler', 'ucs_log_pop_handler', 'ucs_log_num_handlers',

                // Status
                'ucs_status_string'
        ]

        structs = [

                // Context
                'ucp_context_attr', 'ucp_params',

                // Active Messaging
                'ucp_am_handler_param', 'ucp_am_recv_attr',

                // Atomic Operations
                'ucp_atomic_op',

                // Listener
                'ucp_listener_attr', 'ucp_listener_params', 'ucp_conn_request_attr',

                // Datatypes
                'ucp_dt_iov', 'ucp_generic_dt_ops',

                // Endpoint
                'ucp_ep_close_flags',

                // Memory
                'ucp_mem_advice', 'ucp_mem_advise_params', 'ucp_mem_map_params',

                // Request
                'ucp_request_param', 'ucp_op_attr', 'ucp_stream_poll_ep', 'ucp_stream_recv_flags',

                // Worker
                'ucp_worker_address_flags', 'ucp_worker_attr', 'ucp_worker_params',

                'ucp_ep_params', 'ucp_err_handler', 'ucp_listener_conn_handler', 'ucp_mem_attr',

                // Socket
                'ucs_sock_addr'
        ]

        typedefs = [

                // Context
                'ucp_context_attr_t', 'ucp_params_t',

                // Active Messaging
                'ucp_am_handler_param_t', 'ucp_am_recv_attr_t',

                // Atomic Operations
                'ucp_atomic_op_t',

                // Listener
                'ucp_listener_attr_t', 'ucp_listener_params_t', 'ucp_conn_request_attr_t',

                // Datatypes
                'ucp_dt_iov_t', 'ucp_generic_dt_ops_t',

                // Endpoint
                'ucp_ep_close_flags_t',

                // Memory
                'ucp_mem_advice_t', 'ucp_mem_advise_params_t', 'ucp_mem_map_params_t',

                // Request
                'ucp_request_param_t', 'ucp_op_attr_t', 'ucp_stream_poll_ep_t', 'ucp_stream_recv_flags_t',

                // Worker
                'ucp_worker_address_flags_t', 'ucp_worker_attr_t', 'ucp_worker_params_t',

                'ucp_address_t', 'ucp_am_callback_t', 'ucp_am_recv_callback_t', 'ucp_am_recv_data_nbx_callback_t', 'ucp_am_recv_param_t', 'ucp_config_t', 'ucp_conn_request_h', 'ucp_context_h', 'ucp_datatype_t', 'ucp_ep_h', 'ucp_ep_params_t', 'ucp_err_handler_cb_t', 'ucp_err_handler_t', 'ucp_err_handling_mode_t', 'ucp_listener_accept_callback_t', 'ucp_listener_conn_callback_t', 'ucp_listener_conn_handler_t', 'ucp_listener_h', 'ucp_mem_attr_t', 'ucp_mem_h', 'ucp_request_cleanup_callback_t', 'ucp_request_init_callback_t', 'ucp_rkey_h', 'ucp_send_callback_t', 'ucp_send_nbx_callback_t', 'ucp_stream_recv_callback_t', 'ucp_stream_recv_nbx_callback_t', 'ucp_tag_message_h', 'ucp_tag_recv_callback_t', 'ucp_tag_recv_info_t', 'ucp_tag_recv_nbx_callback_t', 'ucp_tag_t', 'ucp_wakeup_event_t', 'ucp_worker_h',

                // Logging
                'ucs_log_func_t', 'ucs_log_func_rc_t',

                // Socket
                'ucs_sock_addr_t'
        ]



        macros = [
                'UCP_AM_FLAG_WHOLE_MSG', 'UCP_AM_HANDLER_PARAM_FIELD_ARG', 'UCP_AM_HANDLER_PARAM_FIELD_CB',
                'UCP_AM_HANDLER_PARAM_FIELD_FLAGS', 'UCP_AM_HANDLER_PARAM_FIELD_ID', 'UCP_AM_RECV_ATTR_FIELD_REPLY_EP',
                'UCP_AM_RECV_ATTR_FLAG_DATA', 'UCP_AM_RECV_ATTR_FLAG_RNDV', 'UCP_AM_SEND_FLAG_EAGER',
                'UCP_AM_SEND_FLAG_REPLY', 'UCP_AM_SEND_FLAG_RNDV', 'UCP_AM_SEND_REPLY', 'UCP_ATOMIC_FETCH_OP_CSWAP',
                'UCP_ATOMIC_FETCH_OP_FADD', 'UCP_ATOMIC_FETCH_OP_FAND', 'UCP_ATOMIC_FETCH_OP_FOR',
                'UCP_ATOMIC_FETCH_OP_FXOR', 'UCP_ATOMIC_FETCH_OP_LAST', 'UCP_ATOMIC_FETCH_OP_SWAP', 'UCP_ATOMIC_OP_ADD',
                'UCP_ATOMIC_OP_AND', 'UCP_ATOMIC_OP_CSWAP', 'UCP_ATOMIC_OP_LAST', 'UCP_ATOMIC_OP_OR',
                'UCP_ATOMIC_OP_SWAP', 'UCP_ATOMIC_OP_XOR', 'UCP_ATOMIC_POST_OP_ADD', 'UCP_ATOMIC_POST_OP_AND',
                'UCP_ATOMIC_POST_OP_LAST', 'UCP_ATOMIC_POST_OP_OR', 'UCP_ATOMIC_POST_OP_XOR',
                'UCP_ATTR_FIELD_MEMORY_TYPES', 'UCP_ATTR_FIELD_REQUEST_SIZE', 'UCP_ATTR_FIELD_THREAD_MODE',
                'UCP_CB_PARAM_FLAG_DATA', 'UCP_CONN_REQUEST_ATTR_FIELD_CLIENT_ADDR', 'UCP_DATATYPE_CLASS_MASK',
                'UCP_DATATYPE_CONTIG', 'UCP_DATATYPE_GENERIC', 'UCP_DATATYPE_IOV', 'UCP_DATATYPE_SHIFT',
                'UCP_DATATYPE_STRIDED', 'UCP_EP_CLOSE_FLAG_FORCE', 'UCP_EP_CLOSE_MODE_FLUSH', 'UCP_EP_CLOSE_MODE_FORCE',
                'UCP_EP_PARAMS_FLAGS_CLIENT_SERVER', 'UCP_EP_PARAMS_FLAGS_NO_LOOPBACK',
                'UCP_EP_PARAM_FIELD_CONN_REQUEST', 'UCP_EP_PARAM_FIELD_ERR_HANDLER',
                'UCP_EP_PARAM_FIELD_ERR_HANDLING_MODE', 'UCP_EP_PARAM_FIELD_FLAGS', 'UCP_EP_PARAM_FIELD_REMOTE_ADDRESS',
                'UCP_EP_PARAM_FIELD_SOCK_ADDR', 'UCP_EP_PARAM_FIELD_USER_DATA', 'UCP_FEATURE_AM', 'UCP_FEATURE_AMO32',
                'UCP_FEATURE_AMO64', 'UCP_FEATURE_RMA', 'UCP_FEATURE_STREAM', 'UCP_FEATURE_TAG', 'UCP_FEATURE_WAKEUP',
                'UCP_LISTENER_ATTR_FIELD_SOCKADDR', 'UCP_LISTENER_PARAM_FIELD_ACCEPT_HANDLER',
                'UCP_LISTENER_PARAM_FIELD_CONN_HANDLER', 'UCP_LISTENER_PARAM_FIELD_SOCK_ADDR', 'UCP_MADV_NORMAL',
                'UCP_MADV_WILLNEED', 'UCP_MEM_ADVISE_PARAM_FIELD_ADDRESS', 'UCP_MEM_ADVISE_PARAM_FIELD_ADVICE',
                'UCP_MEM_ADVISE_PARAM_FIELD_LENGTH', 'UCP_MEM_MAP_ALLOCATE', 'UCP_MEM_MAP_FIXED',
                'UCP_MEM_MAP_NONBLOCK', 'UCP_MEM_MAP_PARAM_FIELD_ADDRESS', 'UCP_MEM_MAP_PARAM_FIELD_FLAGS',
                'UCP_MEM_MAP_PARAM_FIELD_LENGTH', 'UCP_MEM_MAP_PARAM_FIELD_MEMORY_TYPE', 'UCP_MEM_MAP_PARAM_FIELD_PROT',
                'UCP_MEM_MAP_PROT_LOCAL_READ', 'UCP_MEM_MAP_PROT_LOCAL_WRITE', 'UCP_MEM_MAP_PROT_REMOTE_READ',
                'UCP_MEM_MAP_PROT_REMOTE_WRITE', 'UCP_OP_ATTR_FIELD_CALLBACK', 'UCP_OP_ATTR_FIELD_DATATYPE',
                'UCP_OP_ATTR_FIELD_FLAGS', 'UCP_OP_ATTR_FIELD_MEMORY_TYPE', 'UCP_OP_ATTR_FIELD_RECV_INFO',
                'UCP_OP_ATTR_FIELD_REPLY_BUFFER', 'UCP_OP_ATTR_FIELD_REQUEST', 'UCP_OP_ATTR_FIELD_USER_DATA',
                'UCP_OP_ATTR_FLAG_FAST_CMPL', 'UCP_OP_ATTR_FLAG_FORCE_IMM_CMPL', 'UCP_OP_ATTR_FLAG_NO_IMM_CMPL',
                'UCP_PARAM_FIELD_ESTIMATED_NUM_EPS', 'UCP_PARAM_FIELD_ESTIMATED_NUM_PPN', 'UCP_PARAM_FIELD_FEATURES',
                'UCP_PARAM_FIELD_MT_WORKERS_SHARED', 'UCP_PARAM_FIELD_REQUEST_CLEANUP', 'UCP_PARAM_FIELD_REQUEST_INIT',
                'UCP_PARAM_FIELD_REQUEST_SIZE', 'UCP_PARAM_FIELD_TAG_SENDER_MASK', 'UCP_STREAM_RECV_FLAG_WAITALL',
                'UCP_WORKER_ADDRESS_FLAG_NET_ONLY', 'UCP_WORKER_ATTR_FIELD_ADDRESS',
                'UCP_WORKER_ATTR_FIELD_ADDRESS_FLAGS', 'UCP_WORKER_ATTR_FIELD_MAX_AM_HEADER',
                'UCP_WORKER_ATTR_FIELD_THREAD_MODE', 'UCP_WORKER_PARAM_FIELD_CPU_MASK', 'UCP_WORKER_PARAM_FIELD_EVENTS',
                'UCP_WORKER_PARAM_FIELD_EVENT_FD', 'UCP_WORKER_PARAM_FIELD_THREAD_MODE',
                'UCP_WORKER_PARAM_FIELD_USER_DATA',

                'UCP_ERR_HANDLING_MODE_NONE', 'UCP_ERR_HANDLING_MODE_PEER', 'UCP_MEM_ATTR_FIELD_ADDRESS',
                'UCP_MEM_ATTR_FIELD_LENGTH', 'UCP_WAKEUP_AMO', 'UCP_WAKEUP_EDGE', 'UCP_WAKEUP_RMA', 'UCP_WAKEUP_RX',
                'UCP_WAKEUP_TAG_RECV', 'UCP_WAKEUP_TAG_SEND', 'UCP_WAKEUP_TX',

                'UCP_API_MAJOR', 'UCP_API_MINOR', 'UCP_API_VERSION',
                'UCP_VERSION_MAJOR_SHIFT', 'UCP_VERSION_MINOR_SHIFT',

                'UCS_LOG_FUNC_RC_CONTINUE', 'UCS_LOG_FUNC_RC_STOP', 'UCS_LOG_LEVEL_FATAL', 'UCS_LOG_LEVEL_DEBUG',
                'UCS_LOG_LEVEL_INFO', 'UCS_LOG_LEVEL_WARN', 'UCS_LOG_LEVEL_ERROR', 'UCS_LOG_LEVEL_FATAL',

                'UCS_CONFIG_PRINT_CONFIG',

                'UCS_MEMORY_TYPE_HOST', 'UCS_MEMORY_TYPE_ROCM', 'UCS_MEMORY_TYPE_ROCM_MANAGED', 'UCS_MEMORY_TYPE_CUDA',
                'UCS_MEMORY_TYPE_CUDA_MANAGED',

                'UCS_ERR_ALREADY_EXISTS', 'UCS_ERR_BUFFER_TOO_SMALL', 'UCS_ERR_BUSY', 'UCS_ERR_CANCELED',
                'UCS_ERR_CONNECTION_RESET', 'UCS_ERR_ENDPOINT_TIMEOUT', 'UCS_ERR_EXCEEDS_LIMIT',
                'UCS_ERR_FIRST_ENDPOINT_FAILURE', 'UCS_ERR_FIRST_LINK_FAILURE', 'UCS_ERR_INVALID_ADDR',
                'UCS_ERR_INVALID_PARAM', 'UCS_ERR_IO_ERROR', 'UCS_ERR_LAST', 'UCS_ERR_LAST_ENDPOINT_FAILURE',
                'UCS_ERR_LAST_LINK_FAILURE', 'UCS_ERR_MESSAGE_TRUNCATED', 'UCS_ERR_NOT_CONNECTED',
                'UCS_ERR_NOT_IMPLEMENTED', 'UCS_ERR_NO_DEVICE', 'UCS_ERR_NO_ELEM', 'UCS_ERR_NO_MEMORY',
                'UCS_ERR_NO_MESSAGE', 'UCS_ERR_NO_PROGRESS', 'UCS_ERR_NO_RESOURCE', 'UCS_ERR_OUT_OF_RANGE',
                'UCS_ERR_REJECTED', 'UCS_ERR_SHMEM_SEGMENT', 'UCS_ERR_SOME_CONNECTS_FAILED', 'UCS_ERR_TIMED_OUT',
                'UCS_ERR_UNREACHABLE', 'UCS_ERR_UNSUPPORTED', 'UCS_INPROGRESS', 'UCS_OK',

                'UCS_THREAD_MODE_SINGLE', 'UCS_THREAD_MODE_MULTI', 'UCS_THREAD_MODE_SERIALIZED', 'UCS_THREAD_MODE_LAST',
        ]

    }

    header("${project.projectDir}/src/main/resources/linux.h") {

        libraries = [ 'stdc++' ]

        targetPackage = 'org.unix'

        className = 'Linux'

        functions = [

                // Filedescriptor
                'fcntl', 'close',

                // Printing
                'vsnprintf',

                // Event Filedescriptor
                'eventfd', 'eventfd_read', 'eventfd_write',

                // Epoll
                'epoll_wait', 'epoll_ctl', 'epoll_create',

                // Error
                '__errno_location', 'strerror',

                // Helper
                'htons'
        ]

        variables = [

                // Standard I/O
                'stdout', 'stderr', 'stdin'
        ]

        structs = [

                // Epoll
                'epoll_event',

                // Networking
                'sockaddr_storage', 'sockaddr_in', 'sockaddr_in6',
        ]

        macros = [

                // Filedescriptor
                'F_GETFL', 'F_SETFL', 'O_RDONLY', 'O_WRONLY', 'O_RDWR', 'O_CREAT', 'O_EXCL', 'O_NOCTTY', 'O_TRUNC',
                'O_APPEND', 'O_NONBLOCK',

                // Event Filedescriptor
                'EFD_CLOEXEC', 'EFD_NONBLOCK', 'EFD_SEMAPHORE',

                // Epoll
                'EPOLLERR', 'EPOLLET', 'EPOLLEXCLUSIVE', 'EPOLLHUP', 'EPOLLIN', 'EPOLLMSG', 'EPOLLONESHOT',
                'EPOLLOUT', 'EPOLLPRI', 'EPOLLWRBAND', 'EPOLLRDBAND', 'EPOLLRDHUP', 'EPOLLWRNORM', 'EPOLLRDNORM',
                'EPOLLWAKEUP',

                'EPOLL_CTL_ADD', 'EPOLL_CTL_MOD', 'EPOLL_CTL_DEL',

                // Networking
                'AF_INET', 'AF_INET6'

        ]
    }
}